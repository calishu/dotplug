name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches-ignore: []

jobs:
  cmake:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prevent "Processing triggers for man-db" post-install hook
        run: sudo rm /var/lib/man-db/auto-update

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libgit2-dev \
            libcli11-dev \
            libtomlplusplus-dev

      - name: Configure CMake
        run: cmake -S. -Bbuild

      - name: Build project
        run: cmake --build build -j$(nproc)

      # note: this uploads a dynamic executable, so systems you run it on need our dependencies installed.
      # if we want, we can also build a static executable to avoid the above problem.
      # this will take more build system work, though.
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotplug-cmake
          path: |
            build/dotplug

  meson:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prevent "Processing triggers for man-db" post-install hook
        run: sudo rm /var/lib/man-db/auto-update

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            python3-setuptools \
            ninja-build

      - name: Install Conan and Meson
        run: pip3 install --upgrade conan meson

      - name: Configure Conan
        run: conan profile detect --force

      - name: Cache conan packages
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.*') }}
          restore-keys: ${{ runner.os }}-conan-

      - name: Install dependencies with Conan
        run: conan install . --output-folder=build --build=missing

      - name: Configure Meson
        run: |
          source build/conanbuild.sh
          meson setup build --native-file=build/conan_meson_native.ini

      - name: Build Project
        run: |
          source build/conanrun.sh
          meson compile -C build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotplug-meson
          path: |
            build/dotplug
